
- 배치(일괄처리)란?
연속적으로 이어져 진행되는 작업들을 하나의 작업 단위로 패키징하여 처리하는 행위
(주기적으로 실행되는 작업을 의미하기도 함)

1. 인사 발령에 의한 보직자 변경시 결재선 자동 변경 배치
- 기존 결재선 삭제(팀장-부장-임원-사장)
- 각 사원의 조직정보를 바탕으로 사원(조직)별 결재라인 계산
- 계산된 결재선 입력(생성)

2. 이기종 시스템간 조직/인사 데이터 연동을 위한 데이터 전송 배치
- 마스터 인사/조직 시스템 정보 조회
- legacy인사/조직 정보 삭제
- legacy시스템에 마스터 인사/조직 정보 입력 

	job Ropository 
	: 배치 실행 정보를 저장(db/none)
	
	job Launcher 
	: 배치 실행 담당 기반 컴포넌트
	
	Job
	:배치 처리를 통해 실행하는 애플리케이션
	
	Step
	:job의 세부적인 단계를 의미한다 job은 일련의 연속된 스텝으로 구성
	
	Tasklet
	:스텝 내에서 실행되는 작업 단위
	
	Item(data)
	:특정 리소스로(file,db)부터 읽어들여 처리하고자하는 각 레코드

	Chunk 
	:특정 크기를 갖는 아이템 목록, 배치처리 되는 단위
	(한건씩 매번 commit -> 여러건씩 한번에 처리 commit)
	
	Item Reader
	: 특정 리소스로부터 아이템을 읽어들이는 컴포넌트
	
	Item Processor
	:아이템 리더로 읽어들인 아이템을 가공하는 컴포넌트
	
	Item Writer
	:아이템 프로세서로부터 전달받은 아이템 청크를 특정 리소스에 저장하는 컴포넌트
	
	JobInstance 
	:job + jobParameter(잡을 실행할 때 사용할 값)
	JobExecution
	
	:JobInstance의 실행 정보 
	(실패 후 재실행시 새로운 JobExecution생성) 


1. pom(dependency)추가
2. reader, writer, processor

reader => ItemReader 구현
processor => ItemProcessor
writer => ItemWriter구현

K=>key
V=>Value

T=> Type

I => IN
O => Out

* 스케줄러

- 특정메소드를 주기적으로 실행
- 설정
	반복 실행할 클래스-메소드 구현
	스케줄러 등록
	스케줄러-테스크스를 통해 스케줄 등록
	스케줄러를 통해 실행할 항목, 실행주기 설정
